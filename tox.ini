[tox]
envlist = py27,py37

[testenv]
usedevelop = True
passenv = TRAVIS TRAVIS_* GOOGLE_APPLICATION_CREDENTIALS

setenv =
    PYTEST_ADDOPTS = --junitxml=test-reports/{envname}/junit.xml -vv
    BOTO_CONFIG = /dev/null
    AWS_SECRET_ACCESS_KEY = foobar_secret
    AWS_ACCESS_KEY_ID = foobar_key

deps =
    ; This is needed because managed policy mocks aren't in the release just yet:
    git+https://github.com/mikegrima/moto.git@roletags#egg=moto

    mock
    pytest
    coveralls
    .[tests]
    .[gcp]
    .[openstack]

commands =
    pytest {posargs} --cov=cloudaux cloudaux/tests/aws cloudaux/tests/openstack cloudaux/tests/gcp
;    flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
;    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


;[testenv:linters]
;basepython = python3
;usedevelop = true
;deps =
;    {[testenv:flake8]deps}
;    {[testenv:pylint]deps}
;    {[testenv:setuppy]deps}
;    {[testenv:bandit]deps}
;commands =
;    {[testenv:flake8]commands}
;    {[testenv:pylint]commands}
;    {[testenv:setuppy]commands}
;    {[testenv:bandit]commands}

;[testenv:flake8]
;basepython = python3
;skip_install = true
;deps =
;    flake8
;    flake8-docstrings>=0.2.7
;    flake8-import-order>=0.9
;commands =
;    flake8 cloudaux setup.py test

;[testenv:pylint]
;basepython = python3
;skip_install = false
;deps =
;    pyflakes
;    pylint
;commands =
;    pylint --rcfile={toxinidir}/.pylintrc cloudaux

[testenv:setuppy]
basepython = python3
skip_install = true
deps =
commands =
    python setup.py check -m -s

;[testenv:bandit]
;basepython = python3
;skip_install = true
;deps =
;    bandit
;commands =
;    bandit --ini tox.ini -r cloudaux

;[bandit]
;skips = B101
;
;[flake8]
;ignore = E501,I100,D205,D400,D401,I202,R0913,C901
;exclude =
;    *.egg-info,
;    *.pyc,
;    .cache,
;    .coverage.*,
;    .gradle,
;    .tox,
;    build,
;    dist,
;    htmlcov.*
;    *-cookiecutter
;max-complexity = 10
;import-order-style = google
;application-import-names = flake8

[pytest]
norecursedirs=.*
